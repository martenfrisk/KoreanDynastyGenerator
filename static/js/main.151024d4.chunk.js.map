{"version":3,"sources":["Namelist.jsx","GenAll.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["nameArr","familyNameArr","rankPosts","14","20","42","61","87","39","67","8","80","12","23","50","43","72","44","75","60","38","82","83","33","36","47","69","22","90","6","18","89","77","25","81","27","88","86","68","52","37","3","5","13","19","45","48","53","54","56","76","21","7","24","57","70","35","84","55","31","64","17","15","79","30","46","85","65","73","59","34","16","40","51","41","4","9","74","66","49","29","10","62","71","63","26","28","78","1","11","2","32","58","departList","rankList","officeDescs","GenAll","props","getRandomInt","min","max","Math","ceil","floor","random","weightedRandom","dice","famObj","i","length","loopFam","familyPower","familyName","familyId","number","famName","power","persons","personArr","firstNameNr","newName","personID","firstName","push","Array","prototype","sortBy","p","this","slice","sort","a","b","sortedFamObj","getPostArrs","map","map_array","c","key","allPersonArr","assignRanks","group","groupSize","rankQuant","rankName","postArr","selectGroup","remPosts","selectPerson","found","rank","post","pop","keyToValue","numb","arr","Header","h1","Content","h3","blockquote","size","href","icon","style","borderBottom","y","Group","title","initialVisible","align","Footer","auto","marginRight","onClick","window","location","reload","hoverable","textAlign","h4","Container","gap","justify","xs","obj","small","volume","ob","type","placement","leaveDelay","text","id","block","value","JSON","stringify","width","element","document","createElement","file","Blob","getElementById","URL","createObjectURL","download","body","appendChild","click","textTransform","paddingRight","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kLAAaA,G,MAAU,CAAC,QAAS,UAAW,WAAY,UAAW,QAAS,YAAY,YAAa,WAAY,SAAU,SAAU,QAAS,YAAa,SAAU,WAAY,OAAQ,MAAO,QAAS,YAAa,UAAW,QAAS,YAAa,SAAU,QAAS,WAAY,aAAc,YAAa,WAAY,QAAS,OAAQ,SAAU,SAAU,UAAW,QAAS,UAAW,UAAW,UAAW,YAAa,UAAW,UAAW,QAAS,UAAW,SAAU,SAAU,QAAS,WAAY,UAAW,QAAS,YAAa,OAAQ,QAAS,UAAW,UAAW,SAAU,UAAW,SAAU,SAAU,QAAS,QAAS,SAAU,WAAY,SAAU,aAAc,QAAS,WAAY,YAAa,UAAW,UAAW,aAAc,QAAS,MAAO,OAAQ,SAAU,UAAW,OAAQ,UAAW,SAAU,SAAU,UAAW,WAAY,OAAQ,UAAW,UAAW,UAAW,SAAU,UAAW,MAAO,WAAY,QAAS,QAAS,YAAa,WAAY,SAAU,QAAS,WAAY,SAAU,SAAU,UAAW,SAAU,QAAS,UAAW,WAAY,SAAU,OAAQ,OAAQ,UAAW,MAAO,SAAU,SAAU,UAAW,SAAU,QAAS,UAAW,WAAY,UAAW,OAAQ,WAAY,OAAQ,aAAc,WAAY,OAAQ,WAAY,QAAS,SAAU,OAAQ,QAAS,SAAU,QAAS,UAAW,MAAO,SAAU,SAAU,WAAY,UAAW,WAAY,UAAW,UAAW,SAAU,UAAW,WAAY,QAAS,OAAQ,WAAY,SAAU,UAAW,QAAS,WAAY,UAAW,QAAS,QAAS,OAAQ,UAAW,SAAU,QAAS,UAAW,SAAU,MAAO,WAAY,WAAY,WAAY,UAAW,UAAW,SAAU,QAAS,YAAa,SAAU,OAAQ,OAAQ,SAAU,SAAU,UAAW,YAAa,QAAS,WAAY,WAAY,WAAY,QAAS,SAAU,QAAS,SAAU,UAAW,QAAS,WAAY,UAAW,YAAa,WAAY,YAAa,WAAY,UAAW,QAAS,OAAQ,UAAW,QAAS,YAAa,SAAU,SAAU,QAAS,SAAU,SAAU,QAAS,UAAW,OAAQ,UAAW,QAAS,UAAW,UAAW,QAAS,OAAQ,SAAU,WAAY,UAAW,SAAU,SAAU,UAAW,SAAU,SAAU,SAAU,WAAY,QAAS,OAAQ,SAAU,UAAW,SAAU,OAAQ,WAAY,SAAU,WAAY,WAAY,YAAa,QAAS,SAAU,UAAW,OAAQ,SAAU,YAAa,SAAU,SAAU,WAAY,OAAQ,UAAW,UAAW,SAAU,WAAY,QAAS,QAAS,UAAW,UAAW,QAAS,SAAU,YAAa,UAAW,YAAa,WAAY,SAAU,SAAU,QAAS,SAAU,UAAW,SAAU,WAAY,MAAO,SAAU,UAAW,YAAa,UAAW,QAAS,SAAU,QAAS,OAAQ,WAAY,SAAU,OAAQ,QAAS,UAAW,QAAS,YAAa,SAAU,OAAQ,QAAS,YAAa,QAAS,UAAW,QAAS,QAAS,UAAW,WAAY,SAAU,UAAW,QAAS,QAAS,UAAW,QAAS,YAAa,YAAa,UAAW,UAAW,SAAU,WAAY,SAAU,QAAS,aAAc,UAAW,QAAS,YAAa,UAAW,UAAW,OAAQ,WAAY,UAAW,SAAU,QAAS,QAAS,QAAS,QAAS,OAAQ,QAAS,WAAY,SAAU,aAAc,WAAY,YAAa,QAAS,QAAS,SAAU,YAAa,SAAU,QAAS,QAAS,QAAS,OAAQ,SAAU,SAAU,OAAQ,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAAY,UAAW,MAAO,SAAU,YAAa,SAAU,SAAU,OAAQ,QAAS,WAAY,MAAO,WAAY,UAAW,SAAU,SAAU,SAAU,UAAW,WAAY,WAAY,YAAa,YAAa,WAAY,UAAW,SAAU,WAAY,UAAW,WAAY,WAAY,UAAW,QAAS,SAAU,UAAW,MAAO,UAAW,UAAW,YAAa,SAAU,YAAa,SAAU,WAAY,WAAY,SAAU,cAAe,SAAU,QAAS,QAAS,SAAU,SAAU,UAAW,QAAS,MAAO,SAAU,SAAU,QAAS,SAAU,QAAS,SAAU,SAAU,UAAW,UAAW,SAAU,UAAW,QAAS,UAAW,UAAW,WAAY,UAAW,UAAW,SAAU,QAAS,QAAS,YAAa,SAAU,WAAY,UAAW,QAAS,WAAY,MAAO,UAAW,OAAQ,UAAW,WAAY,SAAU,WAAY,QAAS,MAAO,QAAS,QAAS,UAAW,SAAU,SAAU,UAAW,QAAS,QAAS,OAAQ,SAAU,UAAW,QAAS,QAAS,QAAS,QAAS,UAAW,UAAW,UAAW,QAAS,aAAc,UAAW,UAAW,YAAa,QAAS,UAAW,QAAS,SAAU,QAAS,SAAU,OAAQ,SAAU,OAAQ,UAAW,WAAY,OAAQ,WAAY,QAAS,UAAW,SAAU,UAAW,QAAS,QAAS,YAAa,SAAU,OAAQ,YAAa,SAAU,QAAS,QAAS,UAAW,UAAW,OAAQ,U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","file":"static/js/main.151024d4.chunk.js","sourcesContent":["export const nameArr = [\"Taeha\", \"Jaeseok\", \"Seongmin\", \"Sangmin\", \"Jaeuk\", \"Gyeongmin\",\"Jaemyeong\", \"Seongwon\", \"Doyeon\", \"Sujong\", \"Jihan\", \"Gyeongbin\", \"Hanjun\", \"Haeseong\", \"Jihu\", \"Jin\", \"Jiwon\", \"Seonghwan\", \"Yuseung\", \"Mingi\", \"Hyeongjin\", \"Junseo\", \"Semin\", \"Hyeokjun\", \"Chanhyeong\", \"Taegyeong\", \"Wonhyeok\", \"Jubin\", \"Jaei\", \"Uhyeok\", \"Jaewon\", \"Jiseong\", \"Taehu\", \"Seonguk\", \"Eunseok\", \"Jeyeong\", \"Ganghyeon\", \"Hayeong\", \"Jeonguk\", \"Seyun\", \"Yeonjae\", \"Yuchan\", \"Hanhui\", \"Jimin\", \"Yongchan\", \"Junsang\", \"Jueon\", \"Sanghyeok\", \"Juho\", \"Hyeok\", \"Doyeong\", \"Taeyong\", \"Jaehui\", \"Yeseong\", \"Huijun\", \"Geonha\", \"Jumin\", \"Siyul\", \"Juchan\", \"Mingyeol\", \"Eunjae\", \"Hyeonseong\", \"Ideun\", \"Hyeonjae\", \"Seongbeom\", \"Donghun\", \"Jaeyeon\", \"Hyeonseung\", \"Siyun\", \"Siu\", \"Jaeu\", \"Yechan\", \"Mugyeom\", \"Chiu\", \"Taerang\", \"Jinsol\", \"Mingyu\", \"Minjong\", \"Changjun\", \"Hwan\", \"Seonyul\", \"Donggyu\", \"Chaejun\", \"Hyeonu\", \"Taehwan\", \"Uju\", \"Taegyeom\", \"Seoko\", \"Yudam\", \"Seohyeong\", \"Jeongbin\", \"Useong\", \"Yungi\", \"Seunghyo\", \"Taeung\", \"Minjun\", \"Jeongho\", \"Juheon\", \"Minha\", \"Sihyeon\", \"Hyeonjun\", \"Wonjun\", \"Giho\", \"Beom\", \"Seungyu\", \"Jio\", \"Taemin\", \"Seoyul\", \"Huichan\", \"Hyobin\", \"Junsu\", \"Juyeong\", \"Bugyeong\", \"Beomgyu\", \"Yunu\", \"Gyuyeong\", \"Sihu\", \"Changhyeon\", \"Donghwan\", \"Junu\", \"Hangyeol\", \"Taeho\", \"Ihyeon\", \"Jiuk\", \"Yujin\", \"Gibeom\", \"Dohun\", \"Hyeonho\", \"Jun\", \"Yegeon\", \"Hanyul\", \"Seungyun\", \"Dohyeon\", \"Jinseong\", \"Hyeonuk\", \"Seonbin\", \"Harang\", \"Yeongyu\", \"Jeongwon\", \"Yutae\", \"Jian\", \"Yeongmin\", \"Minjae\", \"Sangyun\", \"Yejun\", \"Seunggyu\", \"Suhyeon\", \"Gyeom\", \"Jiung\", \"Jiyu\", \"Gyuyeon\", \"Changu\", \"Taeju\", \"Ganghun\", \"Seoyun\", \"Jiu\", \"Junseong\", \"Seongeun\", \"Eunhyeok\", \"Jaeyeop\", \"Dogyeom\", \"Jiheon\", \"Taesu\", \"Hyeongbin\", \"Jinseo\", \"Juan\", \"Sian\", \"Seojin\", \"Eunyul\", \"Beomjun\", \"Jaegyeong\", \"Gwanu\", \"Yunhyeok\", \"Changmin\", \"Minseung\", \"Yeonu\", \"Seheon\", \"Sieon\", \"Eungyu\", \"Donghwi\", \"Dojin\", \"Jaeyeong\", \"Giseong\", \"Yeongchan\", \"Seongguk\", \"Jeonghwan\", \"Seungbin\", \"Donghan\", \"Geunu\", \"Jiho\", \"Seunggi\", \"Junho\", \"Hyeonseop\", \"Yongha\", \"Yeojun\", \"Jaeun\", \"Gyuwon\", \"Wontae\", \"Jiwan\", \"Mingwan\", \"Huiu\", \"Dongjun\", \"Hoyun\", \"Wonjong\", \"Bohyeon\", \"Minsu\", \"Urim\", \"Yungyu\", \"Byeongsu\", \"Seongho\", \"Siheon\", \"Taewon\", \"Eunchan\", \"Daehan\", \"Geonho\", \"Geonuk\", \"Junhyeon\", \"Yujun\", \"Chan\", \"Seungu\", \"Seungun\", \"Seobin\", \"Taeu\", \"Gyeongju\", \"Dogeon\", \"Hyeonseo\", \"Jeongmin\", \"Gyeongjun\", \"Minho\", \"Suchan\", \"Jihyeon\", \"Gaon\", \"Taebin\", \"Seunggeon\", \"Gyobin\", \"Seongu\", \"Taeseong\", \"Doun\", \"Junseok\", \"Mingeun\", \"Daeyun\", \"Seungjae\", \"Sangu\", \"Yusin\", \"Juhyeon\", \"Seungju\", \"Jinho\", \"Jaeyun\", \"Hyeonseok\", \"Hoyeong\", \"Hyeonjung\", \"Eunchong\", \"Yeonhu\", \"Taehui\", \"Mujin\", \"Minguk\", \"Yonghun\", \"Jaewan\", \"Seungwon\", \"Han\", \"Huiwon\", \"Yeseung\", \"Jonghyeok\", \"Taeyang\", \"Dongu\", \"Yunjun\", \"Dowan\", \"Inho\", \"Dongyeon\", \"Yugeon\", \"Ajun\", \"Jinha\", \"Yongbin\", \"Intae\", \"Seongchan\", \"Eunjun\", \"Ujae\", \"Uijun\", \"Geonyeong\", \"Dawon\", \"Chanyul\", \"Jaeha\", \"Hajin\", \"Changyu\", \"Minyeong\", \"Taehun\", \"Yongjun\", \"Uchan\", \"Garam\", \"Dongbin\", \"Jihun\", \"Seunghwan\", \"Seungchan\", \"Seungho\", \"Jongyun\", \"Yunjae\", \"Taeyeong\", \"Beomsu\", \"Eunho\", \"Seonghyeon\", \"Sangwon\", \"Yewon\", \"Gyeonghun\", \"Yunchan\", \"Gihyeon\", \"Sion\", \"Mingyeom\", \"Seongju\", \"Jinwon\", \"Giyun\", \"Hamin\", \"Gijun\", \"Huije\", \"Juni\", \"Minuk\", \"Seongbin\", \"Yeonho\", \"Seungcheol\", \"Juhyeong\", \"Seongyeon\", \"Injun\", \"Seoho\", \"Sarang\", \"Jonghyeon\", \"Hansol\", \"Sehun\", \"Hayun\", \"Useok\", \"Ihan\", \"Hanseo\", \"Taeeun\", \"Jisu\", \"Haesol\", \"Yeongu\", \"Chaeho\", \"Dogyun\", \"Inchan\", \"Minjin\", \"Dongheon\", \"Hyeokju\", \"Yun\", \"Taegyu\", \"Seungheon\", \"Taewan\", \"Junsik\", \"Haon\", \"Sejin\", \"Yeonghun\", \"San\", \"Jonghwan\", \"Chanhwi\", \"Minsik\", \"Jonguk\", \"Juhwan\", \"Jaeyong\", \"Hyeonmin\", \"Huicheol\", \"Seungyeon\", \"Gyeongmun\", \"Gyuhyeon\", \"Seunghu\", \"Gyubin\", \"Gyeonguk\", \"Taegeon\", \"Jinhyeok\", \"Hanbyeol\", \"Seonung\", \"Hyeon\", \"Minyul\", \"Chanbin\", \"Noa\", \"Daeyeon\", \"Jinseop\", \"Geunhyeok\", \"Gyumin\", \"Hyeondong\", \"Hyowon\", \"Jaehyeok\", \"Minseong\", \"Daehui\", \"Seongnyeong\", \"Gyujin\", \"Haram\", \"Hojun\", \"Sihwan\", \"Dongha\", \"Dahyeon\", \"Geonu\", \"Ian\", \"Useung\", \"Junmin\", \"Seonu\", \"Junhui\", \"Dowon\", \"Taeyun\", \"Geonhu\", \"Jongbin\", \"Inseong\", \"Donguk\", \"Yuseong\", \"Junmo\", \"Geonhui\", \"Gyuhwan\", \"Yeongjun\", \"Seokbin\", \"Junhwan\", \"Gangin\", \"Doyul\", \"Seoin\", \"Donghyeon\", \"Junhwi\", \"Dongyeop\", \"Suseong\", \"Juwan\", \"Jaehyeon\", \"Yul\", \"Suhyeok\", \"Raon\", \"Sanghun\", \"Hyeonjin\", \"Jaehun\", \"Myeongsu\", \"Gangu\", \"Min\", \"Sijun\", \"Taeuk\", \"Yunhwan\", \"Jeongu\", \"Suhwan\", \"Chanmin\", \"Siwon\", \"Subin\", \"Ujun\", \"Gihwan\", \"Dongeun\", \"Useop\", \"Suwan\", \"Yunho\", \"Dojun\", \"Yuhyeon\", \"Minchan\", \"Haseong\", \"Ichan\", \"Seunghyeok\", \"Chanhui\", \"Jihyeok\", \"Hyeongjun\", \"Hajun\", \"Hyeongu\", \"Yumin\", \"Yugeun\", \"Siwan\", \"Jisang\", \"Seou\", \"Jiyong\", \"Suho\", \"Seongmo\", \"Donggeon\", \"Ubin\", \"Jeongyun\", \"Seoha\", \"Mingeon\", \"Seowon\", \"Taeyeon\", \"Jiyul\", \"Yunje\", \"Donghyeok\", \"Dongju\", \"Taeo\", \"Sanghyeon\", \"Uyeong\", \"Jungi\", \"Hojae\", \"Seonjun\", \"Dongwon\", \"Ujin\", \"Gangmin\", \"Hyeonbin\", \"Dongin\", \"Yunseok\", \"Taehyeon\", \"Seonjae\", \"Yunseong\", \"Juwon\", \"Jaejun\", \"Rian\", \"Geon\", \"Seongjae\", \"Junyeong\", \"Isu\", \"Seokju\", \"Jaebeom\", \"Gangsan\", \"Siyeong\", \"Dongmin\", \"Jaechan\", \"Yeonguk\", \"Minu\", \"Seohu\", \"Yuan\", \"Jaebin\", \"Huijae\", \"Suyeong\", \"Dongyun\", \"Doha\", \"Yeonghwan\", \"Haejun\", \"Eunseong\", \"Hun\", \"Jaeho\", \"Gyeol\", \"Yeongjae\", \"Inha\", \"Mingwon\", \"Jaejeong\", \"Yuha\", \"Junyong\", \"Jiun\", \"Seonho\", \"Taein\", \"Seohyeon\", \"Jaehwan\", \"Chanyu\", \"Ho\", \"Daehun\", \"Daon\", \"Yeonsu\", \"Yeonggyu\", \"Seunghyeon\", \"Dongho\", \"Eungyeol\", \"Juha\", \"Chanhyeok\", \"Chanho\", \"Jion\", \"Eunsu\", \"Yunsu\", \"Giyeong\", \"Sinu\", \"Riu\", \"Seungmin\", \"Jinmo\", \"Dahun\", \"Junwon\", \"Wonu\", \"Jaeyul\", \"Ain\", \"Jinuk\", \"Gang\", \"Jeonghun\", \"Gyudam\", \"Jaemin\", \"Ingyu\", \"Sihun\", \"Siho\", \"Seojun\", \"Yedam\", \"Yeongjin\", \"Gangyun\", \"Junbeom\", \"Minhu\", \"Seongyun\", \"Seyeong\", \"Gyuho\", \"Sunho\", \"Juseong\", \"Seongha\", \"Gimin\", \"Uhyeon\", \"Sangjun\", \"Hayul\", \"Jaeseong\", \"Inu\", \"Chaemin\", \"Junhyeong\", \"Jehyeong\", \"Eunu\", \"Doheon\", \"Seongjin\", \"Sehyeon\", \"Doyun\", \"Seungbeom\", \"Juhyeok\", \"Taeyul\", \"Dohyeong\", \"Roun\", \"Seungjun\", \"Ijun\", \"Jinyeong\", \"Dongmyeong\", \"Uhyeong\", \"Seungyeong\", \"Yeonggwang\", \"Yohan\", \"Chanyeong\", \"Minyong\", \"Dogyeong\", \"Jeonghyeon\", \"Yunseo\", \"Yunyeong\", \"Minje\", \"Yeonjun\", \"Jihwan\", \"Yubin\", \"Jiseop\", \"Hanul\", \"Jaein\", \"Jongseo\", \"Hanbin\", \"Seunghun\", \"Songhyeon\", \"Sejun\", \"Seongjun\", \"Eunhu\", \"Byeonghun\", \"Gyeongjin\", \"Minhyeok\", \"Jeongchan\", \"Sihyeong\", \"Yunmin\", \"Yungeon\", \"Taejun\", \"Taei\", \"Habin\", \"Junmyeong\", \"Minhwan\", \"Daehyeon\", \"Mungyu\", \"Hyojun\", \"Junha\", \"Daehwan\", \"Sangheon\", \"Gyeongtae\", \"Myeongjun\", \"Yunhu\", \"Hwanhui\", \"Haru\", \"Won\", \"Junhu\", \"Huiseong\", \"Jiseok\", \"Danu\", \"Seokyeon\", \"Gangjun\", \"Daun\", \"Soyul\", \"Junhyeok\", \"Hyeonsu\", \"Byeongjun\", \"Haneul\", \"Geonyul\", \"Hojin\", \"Seokjun\", \"Gwangho\", \"Haeum\", \"Eunje\", \"Gangho\", \"Minseok\", \"Onyu\", \"Hoyeon\", \"Seonghun\", \"Seung\", \"Minseo\", \"Jiyun\", \"Jaehyeong\", \"Sumin\", \"Chanu\", \"Jinu\", \"Hyeseong\", \"Jeonghu\", \"Hyeongmin\", \"Mugyeong\", \"Changhun\", \"Hyeongyu\", \"Byeongmin\", \"Hobin\"];\r\n\r\nexport const familyNameArr = [\"Bang\", \"Beom\", \"Bin\", \"Bok\", \"Bong\", \"Byeon\", \"Mun\", \"Chae\", \"Chang\", \"Cheon\", \"Cho\", \"Chu\", \"Dae\", \"No\", \"Gu\", \"Dan\", \"Do\", \"Seong\", \"Dokgo\", \"Cha\", \"Du\", \"Eo\", \"Eom\", \"Eun\", \"Ga\", \"U\", \"Gal\", \"Nan\", \"Gam\", \"Geum\", \"Wan\", \"Gi\", \"Gu\", \"Beon\", \"Guk\", \"Gung\", \"Na\", \"Gwak\", \"Gwok\", \"Gye\", \"Hae\", \"Gyeon\", \"Ho\", \"Hwa\", \"Hwangbo\", \"Hyeon\", \"I\", \"In\", \"Sang\", \"Bu\", \"Je\", \"Ji\", \"Jwa\", \"Jong\", \"Ma\", \"Mae\", \"Maeng\", \"Eogeum\", \"Min\", \"San\", \"Mok\", \"Jeung\", \"Mi\", \"Bo\", \"Na\", \"Bi\", \"Nae\", \"Nam\", \"Namgung\", \"Ryeo\", \"On\", \"Paeng\", \"Pan\", \"Po\", \"Pi\", \"Ya\", \"Pyeon\", \"Pyeong\", \"Ra\", \"Ree\", \"Ryeom\", \"Deung\", \"Ryeon\", \"Myo\", \"Ryu\", \"Gwan\", \"Ryuk\", \"Sagong\", \"Seol\", \"Seomun\", \"Seon\", \"Seob\", \"Seonu\", \"Seung\", \"Si\", \"Un\", \"Sim\", \"Tae\", \"Wi\", \"Dam\", \"Won\", \"Sam\", \"Ye\", \"Yeo\", \"Yeom\", \"Yeon\", \"Gyo\", \"Yeop\", \"Yong\", \"Ae\", \"Yuk\"]\r\n\r\nexport const rankPosts = [ // postId: number of posts, randomly placed to simulate randomization\r\n    { \r\n      14: 1, 20: 3, 42: 1, 61: 1, 87: 3, 39: 2, 67: 2, 8: 3, 80: 1, 12: 1, 23: 1, 50: 1, 43: 1, 72: 1, 44: 2\r\n    },{\r\n      75: 1, 12: 1, 61: 1, 14: 1, 43: 2, 67: 1, 60: 1, 87: 3, 44: 2\r\n    },{\r\n      12: 2, 20: 3, 38: 2, 23: 1, 82: 1, 83: 1, 33: 1, 36: 1, 47: 1, 69: 1, 67: 2, 22: 1, 90: 1, 39: 2, 6: 1, 61: 1, 80: 1, 87: 2, 18: 1, 89: 1, 77: 1, 50: 1, 25: 1, 81: 1, 27: 2, 42: 1, 8: 2, 75: 1, 88: 1, 86: 1, 68: 1, 52: 1, 43: 6, 37: 1, 72: 2\r\n    },{\r\n      3: 12, 5: 12, 8: 2, 12: 2, 13: 2, 19: 3, 20: 3, 22: 2, 23: 1, 43: 7, 45: 3, 48: 2, 53: 1, 54: 1, 56: 1, 61: 2, 67: 2, 68: 2, 75: 2, 76: 1, 80: 1, 82: 1, 83: 1, 86: 1, 88: 1, 89: 1, 90: 1\r\n    },{\r\n      69: 1, 21: 2, 61: 5, 7: 2, 24: 1, 47: 1, 57: 2, 60: 2, 70: 1, 8: 1, 43: 8, 35: 1, 53: 1, 84: 1, 90: 1, 89: 1, 39: 1, 12: 2, 18: 2, 55: 2, 31: 2, 64: 1, 20: 7, 83: 2, 17: 2, 15: 1, 27: 1, 88: 1, 79: 1, 80: 1, 50: 2, 48: 1, 23: 1, 30: 1, 46: 1, 86: 1, 82: 1, 85: 6, 45: 12, 65: 1\r\n    },{\r\n      3: 9, 45: 12, 37: 1, 48: 1, 73: 2, 69: 1, 80: 1, 23: 1, 59: 1, 61: 1, 14: 1\r\n    },{\r\n      24: 2, 35: 1, 48: 2, 8: 1, 46: 1, 3: 14, 20: 2, 55: 1, 56: 1, 69: 1, 12: 2, 70: 1, 65: 1, 73: 1, 31: 2, 57: 2, 17: 2, 14: 1, 84: 1, 61: 2, 68: 2, 53: 1, 7: 2, 79: 1, 23: 1, 64: 1, 67: 1, 47: 1, 45: 12, 37: 1, 15: 1, 21: 2\r\n    },{\r\n      34: 1, 72: 4, 61: 1, 39: 1, 87: 2, 73: 1, 48: 2, 23: 1, 45: 12, 7: 2, 80: 1, 56: 2, 16: 1, 40: 1, 67: 1, 3: 12, 68: 3, 51: 1, 41: 1, 12: 2\r\n    },{\r\n      48: 3, 23: 1, 21: 2, 36: 1, 20: 2, 70: 1, 37: 1, 55: 1, 45: 12, 12: 2, 15: 2, 60: 1, 75: 10, 24: 4, 4: 4, 65: 1, 47: 1, 64: 1, 27: 1, 9: 1, 43: 1, 17: 2, 74: 1, 14: 1, 50: 1, 31: 2, 69: 1, 79: 3, 35: 1, 57: 2, 46: 1, 61: 1, 22: 1, 3: 54, 13: 1, 53: 1\r\n    },{\r\n      88: 3, 90: 3, 18: 2, 8: 1, 66: 2, 86: 3, 56: 2, 41: 1, 48: 4, 40: 1, 12: 2, 49: 2, 36: 1, 87: 1, 30: 2, 20: 2, 89: 3, 23: 2, 82: 3, 68: 4, 3: 14, 73: 1, 14: 1, 60: 1, 83: 3, 84: 1, 45: 12, 67: 1\r\n    },{\r\n      22: 2, 35: 1, 21: 1, 59: 1, 47: 1, 48: 4, 29: 1, 43: 1, 53: 1, 31: 2, 52: 1, 79: 3, 10: 2, 14: 3, 17: 4, 20: 2, 42: 1, 69: 1, 60: 1, 74: 1, 46: 1, 50: 1, 24: 4, 45: 12, 4: 4, 62: 1, 70: 2, 23: 2, 65: 2, 76: 1, 57: 2, 37: 1, 75: 10, 7: 1, 61: 1, 3: 123, 6: 1, 71: 1, 13: 1, 9: 1, 63: 1, 15: 3, 26: 4, 28: 1, 66: 2, 49: 1\r\n    },{\r\n      66: 2, 67: 1, 82: 3, 90: 3, 72: 3, 6: 1, 56: 13, 25: 1, 83: 3, 30: 4, 36: 1, 20: 2, 49: 1, 71: 2, 86: 3, 41: 2, 84: 2, 89: 3, 14: 1, 63: 1, 68: 13, 3: 15, 8: 1, 12: 2, 7: 2, 70: 2, 23: 2, 45: 12, 48: 4, 88: 3\r\n    },{\r\n      45: 12, 23: 2, 54: 3, 79: 3, 36: 1, 61: 1, 57: 3, 62: 1, 47: 1, 90: 3, 15: 3, 48: 4, 78: 1, 49: 1, 28: 1, 17: 4, 14: 3, 50: 1, 3: 201, 35: 3, 27: 1, 37: 1, 52: 1, 89: 3, 31: 4, 64: 2, 24: 4, 1: 8, 66: 2, 13: 1, 29: 1, 6: 1, 73: 8, 39: 1, 77: 3, 46: 1, 11: 3, 38: 5, 2: 5, 16: 1, 60: 2, 53: 1, 51: 1, 65: 5, 76: 1, 33: 1, 69: 1, 72: 3, 55: 1, 20: 2\r\n    },{\r\n      67: 1, 70: 2, 12: 2, 7: 4, 21: 2, 85: 2, 66: 2, 68: 3, 20: 1, 48: 4, 3: 5, 22: 3, 80: 2, 23: 1, 45: 12\r\n    },{\r\n      45: 12, 15: 1, 36: 2, 61: 2, 29: 2, 32: 2, 17: 4, 89: 1, 28: 1, 69: 1, 46: 1, 14: 1, 39: 1, 50: 3, 90: 1, 48: 6, 37: 1, 24: 4, 76: 1, 59: 1, 33: 1, 31: 2, 52: 1, 27: 1, 64: 1, 42: 1, 55: 1, 47: 1, 58: 1, 78: 1, 3: 309, 62: 1, 49: 1, 35: 2, 79: 1, 51: 1, 65: 2, 60: 6, 57: 1\r\n    },{\r\n      21: 2, 24: 6, 87: 1, 20: 1, 45: 12, 66: 2, 7: 2, 12: 2, 3: 16, 23: 1, 6: 1, 70: 2, 80: 2, 68: 3, 59: 2, 31: 2, 48: 6, 17: 4, 63: 1\r\n    },{\r\n      76: 1, 52: 1, 3: 483, 42: 1, 69: 1, 14: 1, 61: 3, 89: 2, 78: 1, 51: 1, 49: 1, 15: 1, 47: 1, 16: 1, 36: 2, 28: 1, 33: 1, 45: 13, 90: 1, 50: 2, 60: 1, 65: 3, 35: 2, 79: 1, 6: 1, 46: 1, 37: 1, 62: 1, 29: 2, 32: 2, 17: 4, 48: 5\r\n    },{\r\n      48: 6, 12: 2, 17: 4, 3: 42, 45: 15, 35: 2, 50: 2, 16: 1, 70: 2, 80: 4, 65: 12, 42: 1, 66: 2, 21: 2, 8: 1, 89: 1, 20: 2, 14: 1, 69: 1, 68: 3, 1: 8, 15: 1, 51: 1, 90: 1, 37: 1, 23: 2, 7: 2\r\n    },{\r\n      60: 3, 49: 2, 68: 3, 61: 3, 35: 5, 15: 1, 81: 2, 36: 6, 45: 15, 25: 2, 90: 2, 65: 2, 44: 2, 89: 2, 71: 2, 48: 5, 50: 1, 3: 1939, 58: 2, 37: 1, 2: 10, 17: 4, 14: 1, 33: 2, 21: 2, 70: 2, 69: 1, 79: 1\r\n    }\r\n  ]\r\n\r\n\r\n  export const departList = { \"1\": \"4 hak\", \"2\": \"5 bu\", \"3\": \"5 wi\", \"4\": \"5 wi dochongbu\", \"5\": \"5 wijang\", \"6\": \"Binggo\", \"7\": \"Bongsangsi\", \"8\": \"Chunchugwan\", \"9\": \"Chunghunbu\", \"10\": \"Chungikbu\", \"11\": \"Dohwaseo\", \"12\": \"Donnyeongbu\", \"13\": \"Gaeseongbu\", \"14\": \"Gungisi\", \"15\": \"Gunjagam\", \"16\": \"Gwangheungchang\", \"17\": \"Gwansanggam\", \"18\": \"Gwihuseo\", \"19\": \"Gyeomsabok\", \"20\": \"Gyeongyeon\", \"21\": \"Gyoseogwan\", \"22\": \"Hanseongbu\", \"23\": \"Hongmungwan\", \"24\": \"Hullyeonwon\", \"25\": \"Hwarinseo\", \"26\": \"Hyeminseo\", \"27\": \"Jangagwon\", \"28\": \"Jangheunggo\", \"29\": \"Jangwonseo\", \"30\": \"Jangyewon\", \"31\": \"Jeonhamsa\", \"32\": \"Jeonokseo\", \"33\": \"Jeonsaengseo\", \"34\": \"Jeonseolsa\", \"35\": \"Jeonuigam\", \"36\": \"Jeonyeonsa\", \"37\": \"Jeyonggam\", \"38\": \"Jojiseo\", \"39\": \"Jongbusi\", \"40\": \"Jongchinbu\", \"41\": \"Jonghak\", \"42\": \"Jongmyoseo\", \"43\": \"Jungchubu\", \"44\": \"Munsojeon\", \"45\": \"Naegeumwi\", \"46\": \"Naejasi\", \"47\": \"Naeseomsi\", \"48\": \"Naesibu\", \"49\": \"Naesusa\", \"50\": \"Naeuiwon\", \"51\": \"Pungjeochang\", \"52\": \"Pyeongsiseo\", \"53\": \"Saboksi\", \"54\": \"Sachukseo\", \"55\": \"Sadosi\", \"56\": \"Saheonbu \", \"57\": \"Sajaegam\", \"58\": \"Sajikseo\", \"59\": \"Sangseowon\", \"60\": \"Sanguiwon\", \"61\": \"Saongwon\", \"62\": \"Saonseo\", \"63\": \"Saposeo\", \"64\": \"Saseomsi\", \"65\": \"Sayeogwon\", \"66\": \"Sejaigwisa\", \"67\": \"Sejasigangwon\", \"68\": \"Seonggyungwan\", \"69\": \"Seongonggam\", \"70\": \"Seungmunwon\", \"71\": \"Sogyeokseo\", \"72\": \"Suseonggeumhwasa\", \"73\": \"Tongnyewon\", \"74\": \"Uibinbu\", \"75\": \"Uigeumbu\", \"76\": \"Uiyeonggo\", \"77\": \"Waseo\", \"78\": \"Yanghyeongo\", \"79\": \"Yebinsi\", \"80\": \"Yemungwan\", \"81\": \"Yeoneunjeon\", \"82\": \"Gongjo\", \"83\": \"Byeongjo\", \"84\": \"Saganwon\", \"85\": \"Seungjeongwon\", \"86\": \"Yejo\", \"87\": \"Uijeongbu\", \"88\": \"Ijo\", \"89\": \"Hyeongju\", \"90\": \"Hojo\" }\r\n\r\n  export const rankList = {\r\n    1: \"Jeong 1\", 2: \"Jong 1\", 3: \"Jeong 2\", 4: \"Jong 2\", 5: \"Jeong 3 Sr.\", 6: \"Jeong 3 Jr.\", 7: \"Jong 3\", 8: \"Jeong 4\", 9: \"Jong 4\", 10: \"Jeong 5\", 11: \"Jong 5\", 12: \"Jeong 6\", 13: \"Jong 6\", 14: \"Jeong 7\", 15: \"Jong 7\", 16: \"Jeong 8\", 17: \"Jong 8\", 18: \"Jeong 9\", 19: \"Jong 9\"\r\n  }\r\n\r\n  export const officeDescs = { 1: \"Four public schools in the capital\", 2: \"Five administrative districts into which Hanyang, the capital, is divided\", 3: \"Five military commands, the central command of the Joseon Dynasty\", 4: \"Headquarters of the five military commands\", 5: \"Commanders of the 5 wi (see above)\", 6: \"Ice storehouse for the palace\", 7: \"Managing ritual affairs and conferring posthumous epithets\", 8: \"Office for compilation of annals\", 9: \"Office for giving honors and benefits to meritorious retainers and their descendants\", 10: \"Office established for giving honors and benefits to the founding contributors of the Joseon Dynasty and their descendants\", 11: \"Royal bureau of painting\", 12: \"Office of royal relatives\", 13: \"Ministry of Gaeseong, capital of Goryeo Dynasty (918-1392)\", 14: \"Government arsenal\", 15: \"Military provisions agency\", 16: \"Office in charge of emoluments for government officials\", 17: \"Office for observance of natural phenomena\", 18: \"Office for making coffins and administering funerals\", 19: \"Royal guard\", 20: \"System of education or a seminar in which the king learns and discusses Confucian teachings and important political issues with the court\", 21: \"Office of government publication\", 22: \"capital city hall\", 23: \"Office of special advisers for the king\", 24: \"Bureau of military training\", 25: \"Public clinic\", 26: \"Office of medical service for commoners\", 27: \"Bureau of music\", 28: \"Supply of items (e.g., mats, paper, oiled paper) for the palace\", 29: \"Management of flowers and fruit trees in the palace\", 30: \"Registry where slave rosters are kept\", 31: \"Management of ships and warships\", 32: \"Bureau of prisoners\", 33: \"Office in charge of breeding and providing animals used for national rituals\", 34: \"Office in charge of tents used for rituals\", 35: \"Palace medical office\", 36: \"Office in charge of cleaning and repairing the palace\", 37: \"Office in charge of presenting goods to the king or rewarding the officials, as well as coloring, dyeing, and weaving\", 38: \"Office in charge of manufacturing paper\", 39: \"Office in charge of compiling and recording the genealogy of the royal family and inspecting the royal family\", 40: \"Office of the royal genealogy\", 41: \"Special royal academies (education of the royal family)\", 42: \"Custodians of the royal ancestral shrine\", 43: \"Office of ministers-without-portfolio\", 44: \"A shrine to the queen of King Taejo (progenitor of the Joseon Dynasty)\", 45: \"Palace guard headquarters\", 46: \"Management of certain kinds of food, clothes, and parties for the palace\", 47: \"Management of local items offered to the queens’ palaces, and liquor and appetizers given to officers\", 48: \"Office of eunuch attendants\", 49: \"Royal estate bureau\", 50: \"Royal pharmacy\", 51: \"Office in charge of the accounts of grain, mats, and paper\", 52: \"Office in charge of weights, measures, and prices\", 53: \"Office in charge of horses, wagons, harnesses, and livestock for the king’s use\", 54: \"Office in charge of livestock farming\", 55: \"Management of food used in the palace, especially rice, grain, and sauce\", 56: \"Monitors administration in both central and regional governments to root out corruption and incompetence.\", 57: \"Office in charge of the food items offered to the palace, such as fishes, meat, and salt\", 58: \"Cleaning the sajikdan (i.e., altar for Confucian rites to the land and grain) and its walls\", 59: \"Office in charge of seals and insignias\", 60: \"Bureau of royal attire\", 61: \"Palace kitchen management\", 62: \"Office in charge of making and supplying liquor and rice punch for the palace\", 63: \"Office in charge of managing vegetable gardens of the palace\", 64: \"Office in charge of cotton cloth and paper money\", 65: \"Bureau of translation\", 66: \"Guard of the crown prince\", 67: \"Office of crown prince tutor\", 68: \"National Confucian Academy\", 69: \"Office in charge of building and repairs\", 70: \"Office of diplomatic correspondence\", 71: \"National Taoist temple\", 72: \"Office in charge of repairing, rebuilding, and firefighting for the palace, capital city, and government offices\", 73: \"Office of ritual affairs\", 74: \"Office of princesses’ consorts\", 75: \"State tribunal\", 76: \"Office in charge of managing and supplying oil, honey, vegetables, and seasoning, etc., for the palace\", 77: \"Office in charge of roofing tile production\", 78: \"Fund for scholarship\", 79: \"Office for serving national guests\", 80: \"Office of royal decrees\", 81: \"A shrine to King Deokjong (a temple title of a crown prince Uigyeong [1438-1457])\", 82: \"Ministry of Public Works (construction and repair of public buildings, bridges, roads, state mining and lumbering operations)\", 83: \"Ministry of War (supervision of post roads, beacon fire communication systems, fortifications, and weapons production)\", 84: \"Censor-General (scrutinizes and criticizes the king)\", 85: \"Royal Secretariat (transmits documents to and from the king)\", 86: \"Ministry of Rites (handles foreign relations, supervision of schools and examinations, licensing monks, state ceremonies)\", 87: \"State Council (link between bureaucracy and the king)\", 88: \"Ministry of Personnel (nominations for office, certification of appointments, ranks, titles, evaluation of the performance of officeholders)\", 89: \"Ministry of Punishment (judicial branch of government, in charge of both civil and criminal cases)\", 90: \"Ministry of Taxation (censuses, population registers, land surveys and land registers, collects taxes, distributes funds, maintains warehouses)\" }","import React from 'react'\r\nimport { nameArr, familyNameArr, rankPosts, departList, rankList, officeDescs } from './Namelist'\r\nimport { Link, Tooltip, Spacer, Code, Textarea, Card, Text, Page, Grid, Button, Collapse, Divider, Row } from '@zeit-ui/react'\r\nimport * as Icon from '@zeit-ui/react-icons'\r\n// import Chance from 'chance'\r\n\r\n\r\nconst GenAll = (props) => {\r\n\r\n    // const chance = new Chance()\r\n    // function weightedRandomDistrib(min,max,mean,varianceFactor) {\r\n    //   let prob = [], seq = [];\r\n    //   for(let i=min;i<max;i++) {\r\n    //     prob.push(Math.pow(max-Math.abs(mean-i),varianceFactor));\r\n    //     seq.push(i);\r\n    //   }\r\n    //   return chance.weighted(seq, prob);\r\n    // }\r\n    function getRandomInt(min, max) {\r\n      min = Math.ceil(min)\r\n      max = Math.floor(max)\r\n      return Math.floor(Math.random() * (max - min)) + min\r\n    }\r\n    const weightedRandom = (min, max) => {\r\n      let dice = getRandomInt(1, 10)\r\n      if (dice <= 7) {\r\n        return getRandomInt(min, max * 0.4)\r\n      } else if (dice <= 9) {\r\n        return getRandomInt(max * 0.4, max * 0.75)\r\n      } else if (dice > 9) {\r\n        return getRandomInt(max * 0.75, max)\r\n      }\r\n    }\r\n    let famObj = []\r\n    for (let i = 0; i < familyNameArr.length; i++) {\r\n      let loopFam = {}\r\n      let familyPower = weightedRandom(1, 175)\r\n      let familyName = familyNameArr[i]\r\n      let familyId = i\r\n      loopFam = {\r\n        familyId: familyId,\r\n        famName: familyName,\r\n        power: familyPower,\r\n        persons: []\r\n      } \r\n      let number = loopFam.power\r\n      let personArr = []\r\n      let nameEnd = 676 - familyPower\r\n      let firstNameNr = getRandomInt(0, nameEnd)\r\n      for (let i = 0; i < number; i++) {\r\n        let newName = nameArr[firstNameNr] \r\n        let personID = familyId + \"\" + i \r\n        personArr[i] = {\r\n          personID: personID,\r\n          firstName: newName,\r\n          famName: familyName\r\n        }\r\n        firstNameNr++\r\n      }\r\n      loopFam.persons = personArr\r\n      famObj.push(loopFam)\r\n    }\r\n    \r\n    \r\n\r\n    // eslint-disable-next-line no-extend-native\r\n    Array.prototype.sortBy = function(p) {\r\n        return this.slice(0).sort(function(a,b) {\r\n          return (b[p] > a[p]) ? 1 : (b[p] < a[p]) ? -1 : 0;\r\n        });\r\n    }\r\n\r\n    let sortedFamObj = famObj.sortBy('power')\r\n\r\n    function getPostArrs(map) {\r\n      let map_array = new Array(map.length);\r\n      var c = 0;\r\n      for (const key in map) {\r\n        var max = map[key];\r\n        for (var i = 1; i <= max; i++) {\r\n          map_array[c] = key;\r\n          c++;\r\n        }\r\n      }\r\n      return map_array\r\n    }\r\n    let allPersonArr = []\r\n\r\n    const assignRanks = (group, groupSize, rankQuant, rankName, postArr) => {\r\n      let selectGroup = group.slice(0, groupSize)\r\n      let remPosts = rankQuant\r\n      let i = 0\r\n      let selectPerson = 0\r\n      // let thisPostArr = postArr \r\n      do {\r\n          let found = false\r\n          while (!found) {\r\n            if (i >= groupSize) {\r\n              i = 0\r\n            } else if  (selectPerson >= selectGroup[i].power) {\r\n              i++\r\n            } else if (!selectGroup[i].persons[selectPerson].rank && !selectGroup[i].persons[selectPerson].post) {\r\n                  selectGroup[i].persons[selectPerson].rank = rankName\r\n                  if (postArr.length > 0) { \r\n                    selectGroup[i].persons[selectPerson].post = postArr.pop() \r\n                  }\r\n                  selectPerson = 0\r\n                  found = true\r\n                  allPersonArr.push(selectGroup[i].persons[selectPerson])\r\n            } else {\r\n                  selectPerson++\r\n            }\r\n          }\r\n          remPosts--\r\n          i++\r\n          if (i >= selectGroup.length) {\r\n              i = 0\r\n          }\r\n      } while (remPosts > 0)\r\n    }\r\n\r\n\r\n    assignRanks(sortedFamObj, 10, 24, 1, getPostArrs(rankPosts[0]))\r\n    assignRanks(sortedFamObj, 13, 13, 2, getPostArrs(rankPosts[1]))\r\n    assignRanks(sortedFamObj, 17, 50, 3, getPostArrs(rankPosts[2]))\r\n    assignRanks(sortedFamObj, 19, 70, 4, getPostArrs(rankPosts[3]))\r\n    assignRanks(sortedFamObj, 29, 84, 5, getPostArrs(rankPosts[4]))\r\n    assignRanks(sortedFamObj, 32, 31, 6, getPostArrs(rankPosts[5]))\r\n    assignRanks(sortedFamObj, 40, 67, 7, getPostArrs(rankPosts[6]))\r\n    assignRanks(sortedFamObj, 41, 52, 8, getPostArrs(rankPosts[7]))\r\n    assignRanks(sortedFamObj, 70, 123, 9, getPostArrs(rankPosts[8]))\r\n    assignRanks(sortedFamObj, 75, 78, 10, getPostArrs(rankPosts[9]))\r\n    assignRanks(sortedFamObj, 85, 218, 11, getPostArrs(rankPosts[10]))\r\n    assignRanks(sortedFamObj, 111, 111, 12, getPostArrs(rankPosts[11]))\r\n    assignRanks(sortedFamObj, 111, 326, 13, getPostArrs(rankPosts[12]))\r\n    assignRanks(sortedFamObj, 40, 46, 14, getPostArrs(rankPosts[13]))\r\n    assignRanks(sortedFamObj, 111, 383, 15, getPostArrs(rankPosts[14]))\r\n    assignRanks(sortedFamObj, 65, 68, 16, getPostArrs(rankPosts[15]))\r\n    assignRanks(sortedFamObj, 111, 543, 17, getPostArrs(rankPosts[16]))\r\n    assignRanks(sortedFamObj, 111, 122, 18, getPostArrs(rankPosts[17]))\r\n    assignRanks(sortedFamObj, 111, 2023, 19, getPostArrs(rankPosts[18]))\r\n\r\n \r\n\r\n    const keyToValue = (numb, arr) => {\r\n      let replace_map = arr\r\n\r\n      return replace_map[numb]\r\n    }\r\n\r\n    let downloadTxtFile = () => {\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([document.getElementById('results').value], {type: 'text/plain'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"results-kor-gen.txt\";\r\n      document.body.appendChild(element); // Required for this to work in FireFox\r\n      element.click();\r\n    }\r\n\r\n    let downloadAllPersons = () => {\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([document.getElementById('allPersons').value], {type: 'text/plain'});\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"person-list-kor-gen.txt\";\r\n      document.body.appendChild(element); // Required for this to work in FireFox\r\n      element.click();\r\n    }\r\n\r\n    function refreshPage() {\r\n      window.location.reload(false);\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <Page>\r\n    <Page.Header>\r\n      <Text h1>Korean Dynasty Generator</Text>\r\n    </Page.Header>\r\n    <Page.Content>\r\n      <Card>\r\n        <Text h3>\r\n        Generate list of Korean names for worldbuilding\r\n        </Text>\r\n        <Text blockquote size=\"1rem\">\r\n        The data is based on the <Link href=\"https://en.wikipedia.org/wiki/Gyeongguk_daejeon\" icon style={{borderBottom: '1px gray dotted'}}>Korean State Code</Link> (gyeongguk daejeon) of 1471 which delineated the rank and number of officials in each government agency. In theory, every male citizen could sit the entrance exam to become a government official but in practice the power was concentrated in a few families.<Spacer y={1} />\r\n        This generator roughly simulates how power could have been divided by in <Link href=\"https://en.wikipedia.org/wiki/Joseon\" icon style={{borderBottom: '1px gray dotted'}}>Joseon Korea</Link> by creating families including family members with names, ranks and titles. \r\n        </Text>\r\n        <Spacer y={2} />\r\n      <Collapse.Group>\r\n        <Collapse title=\"Purpose\" initialVisible>\r\n        It started with me creating a map using the excellent <Link icon href=\"https://azgaar.github.io/Fantasy-Map-Generator/\" style={{borderBottom: '1px gray dotted'}}>Azgaar's Fantasy Map Generator</Link> and deciding to base one nation on Joseon-era Korea. As I made up the backstory I realized that I would have to create several characters within the government and stumbled upon the State Code which happened to list all agencies, their staff and the rank of each official.<br />\r\n        You can use this generator however you please and feel free to download the code from the <Link icon href=\"https://github.com/martenfrisk/KoreanDynastyGenerator/tree/source\" style={{borderBottom: '1px gray dotted'}}>GitHub repo</Link> if you want to adjust anything. \r\n        </Collapse>\r\n        <Collapse title=\"Implementation\">\r\n        While the number of government officials is based on those originally stipulated in the State Code, the data related to families is randomized due to lack of exact historical records. The bigger the family, the more likely that they will contain high-ranking officials. Not included are local and provincial government positions as well as the royal family (see Planned features below).\r\n        </Collapse>\r\n        <Collapse title=\"Names & Ranks\">\r\n        <Divider align=\"start\">Names</Divider>\r\n        <Text p>\r\n        The first names are randomly chosen from the most popular names in South Korea today, with a few non-Korean names removed (e.g. Daniel). To simplify matters, I made each person in every family have a unique first name. I used less common surnames for the families because I didn't want Kims and Parks in my made-up world. You can adjust the list of names by editing the Namelist.jsx file. \r\n        </Text>\r\n        <Divider align=\"start\">Ranks</Divider>\r\n        <Text p>\r\n        There are a total of 19 ranks starting with Jeong 1, Jong 1, Jeong 2, Jong 2 and so on to Jong 9. Jeong 3 is further divided into Sr (Sang) and Jr (Ha).  \r\n        </Text>\r\n        </Collapse>\r\n        <Collapse title=\"Planned features\">\r\n          <ul>\r\n            <li>Local government positions</li>\r\n            <li>Family clans (e.g. Gimhae Kim, Miryang Park)</li>\r\n            <li>Automatic family tree generation</li>\r\n            <li>Pages for each individual with more details</li>\r\n            <li>Adjustable weights for randomizer</li>\r\n          </ul>\r\n        </Collapse>\r\n      </Collapse.Group>\r\n        <Card.Footer>\r\n            <Button icon={<Icon.Github />} href=\"https://github.com/martenfrisk/KoreanDynastyGenerator/tree/source\" auto size=\"mini\">GitHub Repo</Button>\r\n        </Card.Footer>\r\n      </Card>\r\n      <Spacer y={2} />\r\n      <Button icon={<Icon.ChevronsDown />} auto style={{marginRight: '10px'}}>\r\n          <Link href=\"#textarea\">Jump to results</Link>\r\n      </Button>\r\n      <Button icon={<Icon.RotateCw />} onClick={refreshPage} auto>Regenerate (reloads page)</Button>\r\n      <Spacer y={2}/>\r\n\r\n      <Card hoverable>\r\n        <Text h3  style={{ textAlign: 'center' }}>Top 30 families</Text>\r\n        <Text h4  style={{ textAlign: 'center' }}>Family name (family members)</Text>\r\n      \r\n        <Grid.Container gap={2} justify=\"center\">\r\n          <Grid xs={6}>\r\n            {sortedFamObj.slice(0, 10)\r\n              .map((obj) => <div key={obj.familyId}><Text b>{obj.famName}</Text>&nbsp; ({obj.power}) </div>)}\r\n          </Grid>\r\n          <Grid xs={6}>\r\n            {sortedFamObj.slice(11, 21)\r\n              .map((obj) => <div key={obj.familyId}><Text b>{obj.famName}</Text>&nbsp;({obj.power})</div>)}\r\n          </Grid>\r\n          <Grid xs={6}>\r\n              {sortedFamObj.slice(22, 32)\r\n              .map((obj) => <div key={obj.familyId}><Text b>{obj.famName}</Text>&nbsp;({obj.power})</div>)}\r\n          </Grid>\r\n        </Grid.Container>\r\n      </Card>\r\n\r\n      <Spacer y={2}/>\r\n\r\n      <Card hoverable>\r\n\r\n      <Grid.Container gap={1} justify=\"left\" >\r\n      <Grid xs={24} justify=\"center\">\r\n        <Text h3  style={{ textAlign: 'center' }}>Most powerful family with members (ranks)</Text>\r\n      </Grid>\r\n              <Grid xs={24}>\r\n              <Row justify=\"center\">\r\n              <Text h4>\r\n                {sortedFamObj[0].famName}&nbsp;family -&nbsp;{sortedFamObj[0].power}&nbsp;members\r\n              </Text>\r\n              <Spacer y={2} />\r\n              </Row>\r\n              </Grid>\r\n                <Grid xs={12}><Text b>First name</Text></Grid>\r\n                <Grid xs={6}><Text b>Rank</Text></Grid>\r\n                <Grid xs={6}><Text b>Agency</Text><br /><Text small>Hover for info</Text></Grid>\r\n\r\n                <Divider volume={2} y={3} />\r\n                <Grid.Container>\r\n\r\n              {sortedFamObj[0].persons.map((ob) => {\r\n                return (\r\n                  <Grid.Container gap={1} key={ob.personID}>\r\n                    <Grid xs={12}><Text small>{ob.firstName}</Text></Grid>\r\n                    { ob.rank && <>\r\n                    <Grid xs={6}><Text small>{keyToValue(ob.rank, rankList)}</Text></Grid>\r\n                    <Grid xs={6}><Text small style={{borderBottom: '1px gray dotted'}}><Tooltip type='secondary' placement='left' leaveDelay='50' text={keyToValue(ob.post, officeDescs)}>{keyToValue(ob.post, departList)}</Tooltip></Text></Grid>\r\n                    </> }\r\n                    <br />\r\n                  </Grid.Container>\r\n                )\r\n              })}\r\n                </Grid.Container>\r\n    </Grid.Container>\r\n    </Card> \r\n\r\n    <Spacer y={2}/>\r\n\r\n    <Card hoverable>\r\n      <p id=\"textarea\">\r\n        In the textarea below is the full generated result. The following is an example of a single object, with only the first person. Click <Link href=\"./Infotable.html\" style={{borderBottom: '1px gray dotted'}}>here</Link> more details on the keys (rank, post, power) and sources.\r\n      </p>\r\n      <Text h4>Code example</Text>\r\n      <Code block>\r\n      {`[{\r\n        \"familyId\": 7,\r\n        \"famName\": \"Chae\",\r\n        \"power\" : 99,\r\n        \"persons\" : [\r\n          { \"personID\": \"70\",\r\n            \"firstName\":\"Useung\",\r\n            \"rank\":1,\r\n            \"post\":\"87\"\r\n          }\r\n        }]`}\r\n      </Code>\r\n      <Text h4>Unedited results</Text>\r\n    <Textarea \r\n      value={JSON.stringify(sortedFamObj)}\r\n      width=\"100%\"\r\n      id=\"results\"\r\n      // defaultlValue={JSON.stringify(sortedFamObj)}\r\n    />\r\n    <Spacer y={1} />\r\n    <Button onClick={downloadTxtFile} icon={<Icon.Download />} auto style={{ textTransform: 'lowercase'}}>Download results as .txt file</Button>\r\n    <Spacer y={1} />\r\n    <Textarea \r\n      value={JSON.stringify(allPersonArr)}\r\n      width=\"100%\"\r\n      id=\"allPersons\"\r\n      // defaultlValue={JSON.stringify(allPersonArr)}\r\n    />\r\n    <Spacer y={1} />\r\n    <Button onClick={downloadAllPersons} icon={<Icon.Download />} auto style={{ textTransform: 'lowercase'}}>Download list of persons as .txt file</Button>\r\n\r\n    </Card>\r\n    </Page.Content>\r\n    <Spacer y={2} />\r\n    <Page.Footer style={{textAlign: \"right\", paddingRight: \"60px\" }}>\r\n      <Text small >Created with React. \r\n      <br />\r\n      Styled with <Link href=\"https://github.com/zeit-ui/react\" style={{borderBottom: '1px gray dotted'}}>Zeit UI</Link>.\r\n      </Text>\r\n    </Page.Footer>\r\n\r\n    </Page>\r\n    \r\n    <Spacer y={2}/>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default GenAll","import React from 'react'\r\n// import './App.css'\r\nimport GenAll from './GenAll'\r\nimport { ZeitProvider, CssBaseline } from '@zeit-ui/react'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <ZeitProvider> \r\n      <CssBaseline />\r\n        <GenAll />\r\n    </ZeitProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}